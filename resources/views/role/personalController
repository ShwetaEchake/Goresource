<?php

namespace App\Http\Controllers;

use App\Models\Personal;
use App\Models\Experience;
use App\Models\Education;
use App\Models\Profesional;
use App\Models\Seminar;
use App\Models\Beneficiary;
use App\Models\Dependents;
use App\Models\CandidateDocument;
use App\Models\Passport;
use Illuminate\Http\Request;
use DB;
use PDF;
class PersonalController extends Controller
{
    /**
     * Display a listing of the resource.
     *
     * @return \Illuminate\Http\Response
     */

      public function pdf()
    {

        $pdf = PDF::loadView('personal.pdf');
        return $pdf->download('personal.pdf');
    }


    public function index()
    {  $data = \DB::table('personal')->paginate(20);
       $country=DB::table('country')->select('country_name','country_id')->distinct()->get();

       return view('personal.index',compact('data','country'));
    }

    /**
     * Show the form for creating a new resource.
     *
     * @return \Illuminate\Http\Response
     */
    public function create()
    {
       $data['document']=DB::table('document_type')->get();
       $data['country']=DB::table('country')->select('country_name','country_id')->distinct()->get();
       $data['branch'] = DB::table('branch')->get();
       return view('personal.create',$data);
    }


 public function advance(Request $request)
    {
        $data = \DB::table('personal');
        $country=DB::table('country')->select('country_name','country_id')->distinct()->get();


           if($request->education_type || $request->course_name){
             $data= Personal::orwhereHas('edu', function($data) use ($request)
             {
             $data->where('education_type', 'LIKE', '%'.$request->education_type.'%')
                   ->where('course_name', 'LIKE', '%'.$request->course_name.'%');
             });
             }

             if($request->designation){
             $data= Personal::orwhereHas('exp', function($data) use ($request)
             {
             $data->where('designation', 'LIKE', '%'.$request->designation.'%');
             });
             }


        if($request->name){
            $data = $data->where('name', 'LIKE', "%" . $request->name . "%");
        }
        if($request->age){
            $data = $data->where('age', 'LIKE', "%" . $request->age . "%");
        }

        if($request->gender){
            $data = $data->where('gender', 'LIKE', "%" . $request->gender . "%");
        }
        if($request->citizenship){
            $data = $data->where('citizenship', 'LIKE', "%" . $request->citizenship . "%");
        }

        if($request->merital_status){
            $data = $data->where('merital_status', 'LIKE', "%" . $request->merital_status . "%");
        }
        if($request->religion){
            $data = $data->where('religion', 'LIKE', "%" . $request->religion . "%");
        }

        if($request->language){
            $data = $data->where('language', 'LIKE', "%" . $request->language . "%");
        }
        if($request->other_skill){
            $data = $data->where('other_skill', 'LIKE', "%" . $request->other_skill . "%");
        }

        if($request->computer_skill){
            $data = $data->where('computer_skill', 'LIKE', "%" . $request->computer_skill . "%");
        }
        if($request->hobbies_sport){
            $data = $data->where('hobbies_sport', 'LIKE', "%" . $request->hobbies_sport . "%");
        }
      
        $data = $data->paginate(10);
        return view('personal.index', compact('data','country'));
    }

    /**
     * Store a newly created resource in storage.
     *
     * @param  \Illuminate\Http\Request  $request
     * @return \Illuminate\Http\Response
     */
    public function store(Request $request)
    {
        $personal = new Personal();
        $personal->name =$request->name ;
        $personal->middle_name =$request->middle_name;
        $personal->last_name=$request->last_name;
        $personal->father_name =$request->father_name;
        $personal->mother_name =$request->mother_name;
        $personal->citizenship =$request->citizenship;
        $personal->date_of_birth=$request->date_of_birth;
        $personal->place_of_birth =$request->place_of_birth ;
        $personal->gender=$request->gender;
        $personal->merital_status =$request->merital_status;
        $personal->age =$request->age;
        $personal->height =$request->height;
        $personal->weight=$request->weight;
        $personal->religion=$request->religion ;
        $personal->language =$request->language;
        $personal->other_skill =$request->other_skill;
        $personal->computer_skill=$request->computer_skill;
        $personal->hobbies_sport=$request->hobbies_sport ;
        $personal->branch_id=$request->branch_id ;
        $personal->save();

           $passport = new Passport();
           $passport->candidate_id=$personal->candidate_id;
           $passport->passport_no=$request->passport_no;
           $passport->date_issue= $request->issue;
           $passport->date_expire=$request->expire;
           $passport->place_issue=$request->place;
           $passport->save();



        foreach($request->education_type as $key=>$education_type) {

            $data= new Education();
            $data->education_type=$request->education_type[$key];
            $data->school_university_name=$request->school_university_name[$key];
            $data->course_name=$request->course_name[$key];
            $data->completed_year=$request->completed_year[$key];
            $data->board_rate=$request->board_rate[$key];
            $data->candidate_id=$personal->candidate_id;
//             print_r($request->completed_year);
//           print_r($data);
// exit();
            $data->save();
        }



          foreach($request->type_of_licence as $key=>$type_of_licence){
            $profesional= new Profesional();
            $profesional->type_of_licence=$request->type_of_licence[$key];
            $profesional->licence_no=$request->licence_no[$key];
            $profesional->date_issue=$request->date_issue[$key];
            $profesional->place_issue=$request->place_issue[$key];
            $profesional->remark=$request->remark[$key];
            $profesional->candidate_id=$personal->candidate_id;
            $profesional->save();
          }



           foreach($request->company_name as $key=>$company_name){
                $experience= new Experience();
                $experience->company_name=$request->company_name[$key];
                $experience->location=$request->location[$key];
                $experience->designation=$request->designation[$key];
                $experience->from_date=$request->from_date[$key];
                $experience->to_date=$request->to_date[$key];
                $experience->type=$request->type[$key];
                $experience->totalyear=$request->totalyear[$key];
                $experience->candidate_id=$personal->candidate_id;
                $experience->save();
            }


            foreach($request->course_title as $key=>$course_title){
                $seminar= new Seminar();
                $seminar->course_title=$request->course_title[$key];
                $seminar->training_center=$request->training_center[$key];
                $seminar->seminar_held=$request->seminar_held[$key];
                $seminar->completion_date=$request->completion_date[$key];
                $seminar->remark=$request->remark[$key];
                $seminar->candidate_id=$personal->candidate_id;
                $seminar->save();
             }


                 foreach($request->beneficiary_type as $key=>$beneficiary_type){
                $beneficiary= new Beneficiary();
                $beneficiary->beneficiary_type=$request->beneficiary_type[$key];
                $beneficiary->beneficiary_name=$request->beneficiary_name[$key];
                $beneficiary->beneficiary_family_name=$request->beneficiary_family_name[$key];
                $beneficiary->beneficiary_mi=$request->beneficiary_mi[$key];
                $beneficiary->beneficiary_birth_date=$request->beneficiary_birth_date[$key];
                $beneficiary->beneficiary_address=$request->beneficiary_address[$key];
                $beneficiary->beneficiary_zip=$request->beneficiary_zip[$key];
                $beneficiary->candidate_id=$personal->candidate_id;
                $beneficiary->save();
             }

            foreach($request->dependent_relation as $key=>$dependent_relation){
                $dependents= new Dependents();
                $dependents->dependent_relation=$request->dependent_relation[$key];
                $dependents->first_name=$request->first_name[$key];
                $dependents->family_name=$request->family_name[$key];
                $dependents->dependent_mi=$request->dependent_mi[$key];
                $dependents->birth_date=$request->birth_date[$key];
                $dependents->occupation=$request->occupation[$key];
                $dependents->gender=$request->genders[$key];
                $dependents->status=$request->status[$key];
                $dependents->emp=$request->emp[$key];
                $dependents->candidate_id=$personal->candidate_id;
                $dependents->save();
             }
             
 /** New subjects */
  // $sub_images = request()->file('document_path');    
  // $sub_names  = request('document_title');
  // foreach($sub_names as $i => $code) {
  //   if(isset($sub_images[$i])) {
  //      $pathToStore = public_path('images');    
  //      if($request->hasFile('document_path') && isset($sub_images[$i])) {
  //         $sub_img_name = uniqid() . '.' . $sub_images[$i]->getClientOriginalExtension();
  //          $sub_images[$i]->move(public_path('/images/'), $sub_img_name); 
           
  //          $candidatedocument = new CandidateDocument([
  //              'document_path' => "{$sub_img_name}",
  //              'document_title' => $sub_names[$i],
  //          ]);
  //          $candidatedocument->save();
           
  //     }
  //   }
  // }

             /** New document */
  $images = request()->file('document_path');    
  $names  = request('document_title');
  foreach($names as $i => $code) {
    if(isset($images[$i])) {
       if($request->hasFile('document_path') && isset($images[$i])) {
            $pathToStore =$request->name.'_'.time();
            $img_name = uniqid() . '.' . $images[$i]->getClientOriginalExtension();
            $images[$i]->move('documents/Candidate/' .$pathToStore,$img_name);
            $candidatedocument = new CandidateDocument([
               'document_path' => "{$img_name}",
               'document_title' => $names[$i],
               'folder_path'=>$pathToStore,
               'candidate_id'=> $personal->candidate_id,
           ]);
           $candidatedocument->save();
           
      }
    }
  }



        return redirect()->route('personal.index')->with('success','Candided Created Successfully');
    }

    /**
     * Display the specified resource.
     *
     * @param  \App\Models\Personal  $personal
     * @return \Illuminate\Http\Response
     */
    public function show(Personal $personal)
    {
        //
    }

    /**
     * Show the form for editing the specified resource.
     *
     * @param  \App\Models\Personal  $personal
     * @return \Illuminate\Http\Response
     */
    public function edit($id)
    {
        $personal=Personal::find($id);
        $data['educations']=DB::table('education')->where('candidate_id',$personal->candidate_id)->get();
        $data['profesionals']=DB::table('profesional')->where('candidate_id',$personal->candidate_id)->get();
        $data['experiences']=DB::table('experience')->where('candidate_id',$personal->candidate_id)->get();
        $data['seminars']=DB::table('seminar')->where('candidate_id',$personal->candidate_id)->get();
        $data['beneficiaries']=DB::table('beneficiary')->where('candidate_id',$personal->candidate_id)->get();
        $data['dependentss']=DB::table('dependents')->where('candidate_id',$personal->candidate_id)->get();
        $data['candidate_documents']=DB::table('candidate_documents')->where('candidate_id',$personal->candidate_id)->get();
        $data['document']=DB::table('document_type')->get();
        $data['country']=DB::table('country')->select('country_name','country_id')->distinct()->get();
        $data['passport']=DB::table('passport')->where('candidate_id',$personal->candidate_id)->get();
        $data['branch'] = DB::table('branch')->get();
        return view('personal.edit',compact('personal'),$data);
    }

    /**
     * Update the specified resource in storage.
     *
     * @param  \Illuminate\Http\Request  $request
     * @param  \App\Models\Personal  $personal
     * @return \Illuminate\Http\Response
     */
    public function update(Request $request,$id)
    {

        $personal=Personal::find($id);
        $personal->name =$request->name ;
        $personal->middle_name =$request->middle_name;
        $personal->last_name=$request->last_name;
        $personal->father_name =$request->father_name;
        $personal->mother_name =$request->mother_name;
        $personal->citizenship =$request->citizenship;
        $personal->date_of_birth=$request->date_of_birth;
        $personal->place_of_birth =$request->place_of_birth ;
        $personal->gender=$request->gender;
        $personal->merital_status =$request->merital_status;
        $personal->age =$request->age;
        $personal->height =$request->height;
        $personal->weight=$request->weight;
        $personal->religion=$request->religion ;
        $personal->language =$request->language;
        $personal->other_skill =$request->other_skill;
        $personal->computer_skill=$request->computer_skill;
        $personal->hobbies_sport=$request->hobbies_sport ;
        $personal->branch_id=$request->branch_id ;
        $personal->save();

           $passport = Passport::where('candidate_id',$personal->candidate_id)->first();
           $passport->passport_no=$request->passport_no;
           $passport->date_issue= $request->issue;
           $passport->date_expire=$request->expire;
           $passport->place_issue=$request->place;
           $passport->save();



              
                                           //model
          $educations= Education::with(['education'])->where('candidate_id',$id)->get();
          $i=0;
         foreach ($educations as $education){
              $education->education_type = request('education_type')[$i];
              $education->school_university_name = request('school_university_name')[$i];
              $education->course_name = request('course_name')[$i];
              $education->completed_year = request('completed_year')[$i];
              $education->board_rate = request('board_rate')[$i];
              $i++;
                        //model
              $personal->edu()->save($education);
         }

                                                    //model
          $profesionals= Profesional::with(['profesional'])->where('candidate_id',$id)->get();
          $i=0;
         foreach($profesionals as $profesional){
            $profesional->type_of_licence=$request->type_of_licence[$i];
            $profesional->licence_no=$request->licence_no[$i];
            $profesional->date_issue=$request->date_issue[$i];
            $profesional->place_issue=$request->place_issue[$i];
            $profesional->remark=$request->remark[$i];
            $profesional->candidate_id=$personal->candidate_id; 
              $i++;
                        //model
            $personal->prof()->save($profesional);
         }


                                                  //model
          $experiences= Experience::with(['experience'])->where('candidate_id',$id)->get();
          $i=0;
         foreach($experiences as $experience){
                $experience->company_name=$request->company_name[$i];
                $experience->location=$request->location[$i];
                $experience->designation=$request->designation[$i];
                $experience->from_date=$request->from_date[$i];
                $experience->to_date=$request->to_date[$i];
                $experience->type=$request->type[$i];
                $experience->totalyear=$request->totalyear[$i];
                $experience->candidate_id=$personal->candidate_id;
              $i++;
                        //model
            $personal->exp()->save($experience);
         }


                                                  //model
          $seminars= Seminar::with(['seminar'])->where('candidate_id',$id)->get();
          $i=0;
         foreach($seminars as $seminar){
                $seminar->course_title=$request->course_title[$i];
                $seminar->training_center=$request->training_center[$i];
                $seminar->seminar_held=$request->seminar_held[$i];
                $seminar->completion_date=$request->completion_date[$i];
                $seminar->remark=$request->remark[$i];
                $seminar->candidate_id=$personal->candidate_id;
              $i++;
                        //model
            $personal->sem()->save($seminar);
         }



                                                  //model
          $beneficiarys= Beneficiary::with(['beneficiary'])->where('candidate_id',$id)->get();
          $i=0;
         foreach($beneficiarys as $beneficiary){
                $beneficiary->beneficiary_type=$request->beneficiary_type[$i];
                $beneficiary->beneficiary_name=$request->beneficiary_name[$i];
                $beneficiary->beneficiary_family_name=$request->beneficiary_family_name[$i];
                $beneficiary->beneficiary_mi=$request->beneficiary_mi[$i];
                $beneficiary->beneficiary_birth_date=$request->beneficiary_birth_date[$i];
                $beneficiary->beneficiary_address=$request->beneficiary_address[$i];
                $beneficiary->beneficiary_zip=$request->beneficiary_zip[$i];
                $beneficiary->candidate_id=$personal->candidate_id;
              $i++;
                        //model
            $personal->ben()->save($beneficiary);
         }



                                                    //model
          $dependentss= Dependents::with(['dependents'])->where('candidate_id',$id)->get();
          $i=0;
         foreach($dependentss as $dependents){
                $dependents->dependent_relation=$request->dependent_relation[$i];
                $dependents->first_name=$request->first_name[$i];
                $dependents->family_name=$request->family_name[$i];
                $dependents->dependent_mi=$request->dependent_mi[$i];
                $dependents->birth_date=$request->birth_date[$i];
                $dependents->occupation=$request->occupation[$i];
                $dependents->gender=$request->genders[$i];
                $dependents->status=$request->status[$i];
                $dependents->emp=$request->emp[$i];
                $dependents->candidate_id=$personal->candidate_id;
              $i++;
                        //model
            $personal->dep()->save($dependents);
         }



  $candidatefolderpath=DB::table('candidate_documents')->where('candidate_id',$personal->candidate_id)->first();


  $candidatedocuments= CandidateDocument::with(['candidatedocument'])->where('candidate_id',$id)->get();

  $i=0;
  foreach($candidatedocuments as $candidatedocument){
  $images = request()->file('document_path');    
  $names  = request('document_title');

    if(isset($images[$i])) {
       if($request->hasFile('document_path') && isset($images[$i])) {
            $pathToStore =$candidatefolderpath->folder_path;
            $img_name = uniqid() . '.' . $images[$i]->getClientOriginalExtension();
             $images[$i]->move('documents/Candidate/' .$pathToStore,$img_name);
        
              $candidatedocument->document_path = "{$img_name}";
              $candidatedocument->document_title = $names[$i];
              $candidatedocument->folder_path =$pathToStore;
              $i++;
             
                           //model
             $personal->document()->save($candidatedocument);
         
 
      }
    }
  }
















           // if($request->hasfile('attached_document1')){
           //  $file=$request->file('attached_document1');
           //  $extension=$file->getClientOriginalExtension();
           //  $filename=time() .'.' .$extension;
           //  $path = $enquiry->folder_path;
           //  $file->move("documents/".$result->folder_path."/".$path, $filename);
           //  $enquiry->attached_document1=$filename;
           //  }




















        return redirect()->route('personal.index')->with('success','Candided Updated Successfully');

    }

    /**
     * Remove the specified resource from storage.
     *
     * @param  \App\Models\Personal  $personal
     * @return \Illuminate\Http\Response
     */
    public function destroy($id)
    {
        $personal=DB::table('personal')->where('candidate_id',$id)->first();
        $educations=DB::table('education')->where('candidate_id',$personal->candidate_id)->delete();
        $profesionals=DB::table('profesional')->where('candidate_id',$personal->candidate_id)->delete();
        $experiences=DB::table('experience')->where('candidate_id',$personal->candidate_id)->delete();
        $seminars=DB::table('seminar')->where('candidate_id',$personal->candidate_id)->delete();
        $beneficiaries=DB::table('beneficiary')->where('candidate_id',$personal->candidate_id)->delete();
        $dependentss=DB::table('dependents')->where('candidate_id',$personal->candidate_id)->delete();
        $candidate_documents=DB::table('candidate_documents')->where('candidate_id',$personal->candidate_id)->delete();
        $personal=DB::table('personal')->where('candidate_id',$id)->delete();

        return redirect()->route('personal.index')->with('success','Candided Deleted Successfully');

      
    }
}
